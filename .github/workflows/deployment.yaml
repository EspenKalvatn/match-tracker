#name: Vercel Deployment
#
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  Deploy-Preview:
#    runs-on: ubuntu-latest
#    env:
#      VERCEL_ENVIRONMENT: preview
#      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
#      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
#      DATABASE_URL: ${{ secrets.DATABASE_URL }}
#      NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
#      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: Install Vercel CLI
#        run: npm install --global vercel@latest
#      - name: Pull Vercel Environment Information
#        run: vercel pull --yes --environment=$VERCEL_ENVIRONMENT --token=${{ secrets.VERCEL_TOKEN }}
#      - name: Build Project Artifacts
#        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
#      - name: Deploy Project Artifacts to Vercel
#        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --env DB_CONNECTION=${DB_CONNECTION} --env API_KEY=${API_KEY}
#
#  Deploy-Production:
#    runs-on: ubuntu-latest
#    env:
#      VERCEL_ENVIRONMENT: production
#      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
#      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
#      DATABASE_URL: ${{ secrets.DATABASE_URL }}
#      NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
#      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: Install Vercel CLI
#        run: npm install --global vercel@latest
#      - name: Pull Vercel Environment Information
#        run: vercel pull --yes --environment=$VERCEL_ENVIRONMENT --token=${{ secrets.VERCEL_TOKEN }}
#      - name: Build Project Artifacts
#        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
#      - name: Deploy Project Artifacts to Vercel
#        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} --env DB_CONNECTION=${DB_CONNECTION} --env API_KEY=${API_KEY}


#name: Vercel Deployment
#
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  Build:
#    runs-on: ubuntu-latest
#    env:
#      VERCEL_ENVIRONMENT: ${{ matrix.environment }}
#    strategy:
#      matrix:
#        environment: [preview, production]
#    steps:
#      - uses: actions/checkout@v2
#      - name: Install Vercel CLI
#        run: npm install --global vercel@latest
#      - name: Pull Vercel Environment Information
#        run: vercel pull --yes --environment=$VERCEL_ENVIRONMENT --token=${{ secrets.VERCEL_TOKEN }}
#      - name: Build Project Artifacts
#        run: vercel build --${{ matrix.environment === 'production' ? 'prod' : 'token=${{ secrets.VERCEL_TOKEN }}' }}
#
#  Deploy-Preview:
#    needs: Build
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        environment: [preview]
#    steps:
#      - name: Deploy Project Artifacts to Vercel
#        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
#
#  Deploy-Production:
#    if: success()
#    needs: Build
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        environment: [production]
#    steps:
#      - name: Deploy Project Artifacts to Vercel
#        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
