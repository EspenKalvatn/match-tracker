// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Match {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  homeTeam    String
  awayTeam    String
  homeScore   Int
  awayScore   Int
  date        String
  stadium     String
  competition String
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @db.ObjectId
  posts       Post[]   @relation("MatchPosts")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  likes     Like[]
  comments  String[]
  match     Match    @relation("MatchPosts", fields: [matchId], references: [id])
  matchId   String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  post      Post     @relation(fields: [postId], references: [id])
  postId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  name      String
  role      Role     @default(USER)
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Match     Match[]
  Post      Post[]
  Like      Like[]
}
